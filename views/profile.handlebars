<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
<link rel="stylesheet" href="static/css/global.css">
<link rel="stylesheet" href="static/css/profile.css">

<div id="profile-container">
                {{> nav}}

    <div id="banner">
        <h1 id="user-hello"></h1>
        <div class="container">
            <div class="col-md-12 text-center">
                <button class="btn btn-primary btn-convo" id="convo-button">Talk with Someone</button>
            </div>
        </div>
    </div>

    <div class="tab">
        <button class="tablinks col-md-4 bottombar" onclick="openCity(event, 'My Questions')" id="defaultOpen">My Questions</button>
        <button class="tablinks col-md-4 bottombar" onclick="openCity(event, 'My Stats')">My Stats</button>
        <button class="tablinks col-md-4 bottombar" onclick="openCity(event, 'My History')">My History</button>
    </div>

    <div id="My Questions" class="tabcontent">
     {{> questions }}
    </div>

    <div id="My Stats" class="tabcontent">
        <div class="holder">
            <h4>See Your Statistics</h4>
            <hr>
            <div id="star-section">
                <p id="star-text">Your Rating</p>
                <div class="text-center" id="star-area">
                    <span id="star1">&#9733;</span></span>
                    <span id="star2">&#9733;</span></span>
                    <span id="star3">&#9733;</span></span>
                    <span id="star4">&#9733;</span></span>
                    <span id="star5">&#9733;</span></span>
                </div>
                <div id="conversation-text"></div>
            </div>
            <div>
                <span id="convo-count"></span>
            </br></br>
            </div>
            <div id="badge-section">
                <p id="badge-text"> Your Badges</p>
                <div class="badge-area">
                    <table class="table">
                        <tr>
                            <td align="center">
                                <span id="empathetic"  class="fa fa-heart attribute">
                                    <span id="empathetic-count" class="num"></span>
                                </span>
                                <span class="badge-label">Empathetic</span>
                            </td>
                            <td align="center">
                                <span id="polite" class="fa fa-handshake-o">
                                    <span id="polite-count" class="num"></span>
                                </span>
                                <span class="badge-label">Polite</span>
                            </td>
                            <td align="center">
                                <span id="knowledgeable" class="fa fa-book attribute">
                                    <span id="knowledgeable-count" class="num"></span>
                                </span>
                                <span class="badge-label">Knowledgeable</span>
                            </td>
                            <td align="center">
                                <span id="creative" class="fa fa-wrench">
                                    <span id="creative-count" class="num"></span>
                                </span>
                                <span class="badge-label">Creative</span>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <br/>
            <div>
                View the leaderboard of your friends
                <div id="leaderboard"></div>
            </div>
        </div>
    </div>

    <div id="My History" class="tabcontent">
        <div class="holder">
            <h4>Previous Conversations</h4>
            <hr>
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="row">

                            <div class="col-md-12">
                                <div class="input-group c-search">
                                    <input type="text" class="form-control" id="contact-list-search">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="button">
                                            <span class="fa fa-search text-muted"></span>
                                        </button>
                                    </span>
                                </div>
                                <div class="panel-heading c-list">
                                </div>
                            </div>
                        </div>
                        <ul class="list-group row" id="contact-list">
                        </ul>
                    </div>
                </div>
        	</div>
        </div>
    </div>
</div>

<!-- JavaScript Search Plugin -->
<script src="//rawgithub.com/stidges/jquery-searchable/master/dist/jquery.searchable-1.0.0.min.js"></script>

<script type='text/javascript'>
    var user = {{{ user }}};

    function paintStars(nStars) {
        // console.log(nStars);
        for (i = 1; i <= nStars; i++) {
            var elt = $('#star' + i.toString());
            elt.html('&#9733;');
        };
        for (i = nStars + 1; i <= 5; i++) {
            var elt = $('#star' + i.toString());
            elt.html('&#x2606');
        };
    }

    function countBadges(badgeName, person) {
        console.log('badgename');
        var count = 0;
        person.badges.forEach(function (d) {
            if (d.badge == badgeName) {
                count = d.count;
            }
        })
        return count;
    }

    function buildLeaderboard(leaders) {
        var start = '<div id="leaderboard-table">'
        var tHead = '<div class="row header-row">' +
                        '<div class="col-md-3">Friend</div>'    +
                        '<div class="col-md-2">Empathetic</div>'       +
                        '<div class="col-md-2">Polite</div>'    +
                        '<div class="col-md-3">Knowledgeable</div>'      +
                        '<div class="col-md-2">Creative</div>'  +
                    '</div>';
        var cols = '';
        leaders.forEach(friend => {
            var friendStats = ('<div class="row data-row">' +
                                   '<div class="col-md-3">' + friend.name                           + '</div>' +
                                   '<div class="col-md-2">' + countBadges('empathetic'   , friend)  + '</div>' +
                                   '<div class="col-md-2">' + countBadges('polite'       , friend)  + '</div>' +
                                   '<div class="col-md-3">' + countBadges('knowledgeable', friend)  + '</div>' +
                                   '<div class="col-md-2">' + countBadges('creative'     , friend)  + '</div>' +
                               '</div>');
            cols += friendStats;
        });
        var end = '</div>';
        return start + tHead + cols + end;
    }

    function getLeaderboard() {
        $.ajax({
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            url: '/profile/leaderboard',
            success: res => {
                console.log(res);
                $('#leaderboard')[0].innerHTML = buildLeaderboard(res);
            }
        })
    }

    function makePrettyDate(seconds) {
        const minutes = Math.floor((seconds) / 60);
        const extraSeconds = Math.floor(seconds - minutes * 60) % 60;
        if (minutes == 0)
            return extraSeconds + ' seconds';
        else if (extraSeconds == 0)
            return minutes + ' minutes';
        else
            return minutes + ' minutes, ' + extraSeconds + ' seconds';
    }

    function extraInfoFromChat(row) {
        var [chat, name] = row

        var info = {};
        info.otherName = name;
        info.connectedDate = chat.connected.time;
        info.disconnectedDate = chat.disconnected.time;
        info.disconnectedReason = chat.disconnected.reason;
        info.duration = makePrettyDate((new Date(info.disconnectedDate) - new Date(info.connectedDate))/1000)
        info.feedbackReceived = {};
        info.feedbackSent = {};

        for (var i = 0; i < chat.feedback.length; i++) {
            if (chat.feedback[i].from == user.uuid)
                info.feedbackSent = chat.feedback[i];
            else
                info.feedbackReceived = chat.feedback[i];
        }
        return info;

    }

    function getHistory() {
        $.ajax({
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            url: '/profile/chats',
            success: res => {
                console.log(res)

                // Double-check conversation count
                if (res.length > $("#convo-count").text) {
                    $("#convo-count").text(res.length);
                }

                // Sort the results by recency
                res.sort((a, b) => {
                    a_info = extraInfoFromChat(a);
                    b_info = extraInfoFromChat(b);

                    if (a_info === undefined || b_info === undefined
                        || a_info === null || b_info === null) {
                        return 0
                    }

                    return a_info.connectedDate - b_info.connectedDate;
                }).reverse()

                // Populate history form

                res.forEach(row => {

                    var tableHtml = ""

                    const info = extraInfoFromChat(row)

                    // Build up html here
                    tableHtml += '<li class="list-group-item">' +
                                 '<div class="col-md-12">' +
                                '<span class="name">' + info.otherName + '</span><br/>' +
                                '<span class="fa fa-calendar text-muted c-info" data-toggle="tooltip" title="Date"></span>' +
                                '<span> ' + new Date(info.connectedDate) + '</span><br/>' +
                               '<span class="fa fa-clock-o text-muted c-info" data-toggle="tooltip" title="Duration"></span>' +
                                '<span>' + info.duration + '</span><br/></br>';



                    if (!$.isEmptyObject(info.feedbackSent)){
                        tableHtml +=
                        '<div class="row">' +
                            '<div class="col-6">' +


                            '<span class="visible-xs"> <span class="text-muted">Feedback Sent</span><br/></span>' +
                            '<span class="fa fa-star text-muted c-info" data-toggle="tooltip" title="Stars"></span>' +
                            '<span>' + info.feedbackSent.stars + '</span></br>' +
                            '<span class="fa fa-trophy text-muted c-info" data-toggle="tooltip" title="Badges"></span>' +
                            '<span> ' + info.feedbackSent.badges.toString().replace(",", ", ") + '</span></br>' +
                            '<span class="fa fa-comments text-muted c-info" data-toggle="tooltip" title="Feedback Sent"></span>' +
                            '<span> ' + info.feedbackSent.text + '</span>' +
                        '</div>';
                    }
                    if (!$.isEmptyObject(info.feedbackReceived)){
                        tableHtml +=
                            '<div class="col-6">' +
                            '<span class="visible-xs"> <span class="text-muted">Feedback Received</span><br/></span>' +
                            '<span class="fa fa-star text-muted c-info" data-toggle="tooltip" title="Stars"></span>' +
                            '<span>' + info.feedbackReceived.stars + '</span></br>' +
                            '<span class="fa fa-trophy text-muted c-info" data-toggle="tooltip" title="Badges"></span>' +
                            '<span>' + info.feedbackReceived.badges.toString().replace(",", ", ") + '</span></br>' +
                            '<span class="fa fa-comments text-muted c-info" data-toggle="tooltip" title="Feedback Received"></span>' +
                            '<span>' + info.feedbackReceived.text + '</span>' +
                            '</div>';
                    }

                    tableHtml +=
                        '</div>' +
                        '<div class="clearfix"></div>' +
                        '</li>';

                    // append tableHtml string to the html
                    $("#contact-list").append(tableHtml);

                })

                // make the history list searchable
                $('#contact-list').searchable({
                    searchField: '#contact-list-search',
                    selector: 'li',
                    childSelector: '.col-md-12',
                    show: function( elem ) {
                        elem.slideDown(100);
                    },
                    hide: function( elem ) {
                        elem.slideUp( 100 );
                    }
                })

            }
        })
    }

    function pluralize(n){
        if (n==1){
            return 'conversation';
        }
        else {
            return 'conversations'
        }
    }

    $(document).ready(function() {
        jQuery(function() {
            $("#user-hello").html("Welcome to your profile, " + user.facebook.name + "!");
            paintStars(+user.rating.stars);
            $('#conversation-text').html(user.rating.count + ' ' + pluralize(user.rating.count));
            ['empathetic', 'knowledgeable', 'creative', 'polite'].forEach(function(d) {
                $('#' + d + '-count').html(countBadges(d, user));
            })

            // show leaderboard right away if user has already selected to see their leaderboard
            if (user.show_leaderboard) {
                getLeaderboard();
            } else {
                // add button for showing leaderboard for the first time
                $("#leaderboard").append(
                    '<button class="gradient-btn" id="show-leaderboard">Authorize Facebook Friends to See Leaderboard</button>'
                )
                $("#show-leaderboard").on("click", e => {
                    getLeaderboard()
                    $("#show-leaderboard").remove()
                })
            }

            $("#convo-button").on("click", (e) => {
                // This is a hack, see questions code for this onclick function.
                // Needed to do this so we could use function internal to questions.handlebars' script.
                $('#call')[0].onclick();
            });

            getHistory();

            // add search bar after creating list, so that everything is searchable
            $("#search-bar").append('<div class="input-group c-search">' +
                '<input type="text" class="form-control" id="contact-list-search">' +
                '<span class="input-group-btn">' +
                    '<button class="btn btn-default" type="button"><span class="fa fa-search text-muted"></span></button>' +
                '</span>' +
            '</div>');


        });
    });

    function openCity(evt, cityName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }

// Get the element with id="defaultOpen" and click on it
document.getElementById("defaultOpen").click();
</script>
