<!DOCTYPE html>
<html lang="en">

<head>
    <title>Textroulette</title>

    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css" integrity="sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb"
        crossorigin="anonymous">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ"
        crossorigin="anonymous"></script>
</head>

<body>
    <nav class="navbar navbar-toggleable-md navbar-light bg-faded">
        <a class="navbar-brand" href="#">TextRoulette</a>
        <input class="btn btn-outline-danger my-2 my-sm-0" type="button" id="logout" value="Logout" />
    </nav>
    <div class="container mt-5">
        <div class="row text-center">
            <div class="col-md-12" style="height:100%;">
                <h1>TextRoulette</h1>
                <p id="identity"></p>
                <!-- where the messages will apend in -->
                <div id="chat" class="border bg-light text-left p-3" style="height:20em;overflow:scroll;">
                </div>

                <!-- form and input box to submit messages -->
                <form id="send-message" class="mt-5">
                    <div class="form-row">
                        <div class="form-group col-md-8">
                            <input type="text" class="form-control" id="message" aria-describedby="messageHelp" placeholder="Type a Message">
                        </div>
                        <div class="form-group col-md-2">
                            <input id="send-message-button" type="submit" value="Send" class="btn btn-primary disabled" style="width:100%;"></input>
                        </div>
                        <div class="form-group col-md-2">
                            <input id="end-conversation" type="button" value="End Conversation" class="btn btn-danger disabled" style="width:100%;"></input>
                        </div>
                    </div>
                </form>
                <a href="updatePreferences">Update Your Stances</a>
            </div>
        </div>
    </div>



    <!-- import socketio for the front end -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.1/socket.io.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh"
        crossorigin="anonymous"></script>
    <!-- front end javasctipt and using jQuery -->
    <script type="text/javascript">
        // load when jquery and page has be loaded

        const isAuthenticated = {{ isAuthenticated }}
        const user = {{{ user }}}
        
        $(document).ready(function () {
            jQuery(function () {
                // connect to socket on server
                var socket = io.connect();
                var $messageForm = $("#send-message");
                var $sendMessageButton = $("#send-message-button");
                var $messageBox = $("#message");
                var $chat = $("#chat");
                var $identity = $("#identity");
                var $endConversation = $("#end-conversation");
                var $logout = $("#logout");

                // when the submit button is clicked “e” is the event
                $messageForm.submit(function (e) {
                    // prevent the default setting of page refreshing
                    e.preventDefault();
                    var msg = $messageBox.val();
                    if (!msg) {
                        return;
                    } else {
                        // if text input, send the message input to the server
                        socket.emit("send message", $messageBox.val());
                    }
                    // clear out the input box
                    $messageBox.val("");
                })

                $endConversation.click(() => {
                    socket.emit("hangup");
                })

                $logout.click(() => {
                    socket.emit("logout");
                    window.location.href = '/logout';
                })

                // when socket emit a message to each user
                socket.on("new message", function (data) {
                    // append the message into the “chat” div
                    var $newDiv = $("<div />");
                    $newDiv.text(data);
                    $chat.append($newDiv);
                })
                socket.on("waiting", () => {
                    $chat.append("<em>Waiting for a partner...</em><br />")
                    $endConversation.addClass('disabled');
                    $messageBox.addClass('disabled');
                    $sendMessageButton.addClass('disabled');
                })
                socket.on("pairing", function (data) {
                    var $newEm = $("<em />");
                    $newEm.text("You are now talking to " + data);
                    var $newDiv = $("<div />");
                    $newDiv.append($newEm)
                    $chat.text("");
                    $chat.append($newDiv)
                    $sendMessageButton.removeClass('disabled');
                    $messageBox.removeClass('disabled');
                    $endConversation.removeClass('disabled');
                })
                socket.on("disconnected", function (data) {
                    var $newEm = $("<em />");
                    $newEm.text(data + " has disconnected");
                    var $newDiv = $("<div />");
                    $newDiv.append($newEm)
                    $chat.text("");
                    $chat.append($newDiv)
                })
                socket.emit("set user", {
                    username: user.facebook.name,
                    user_id: user.uuid
                })
                socket.on("recall username", username => {
                    $identity.text("Hello, " + username);
                })
                socket.emit("set user id", user.uuid)

            })
        })

        
    </script>
</body>

</html>