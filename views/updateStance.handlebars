<!DOCTYPE html>
<html lang="en">

<head>
  <title>Textroulette Preferences</title>

  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css" integrity="sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb" crossorigin="anonymous">
  <style>
        div#holder {
        background: #fff;
        width: 100%;
        margin: auto;
        padding: 30px;
        min-width: 320px;
        max-width: 640px;
        box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.16), 0 2px 5px 0 rgba(0, 0, 0, 0.26);
        border-radius: 3px;
        }

        .inline-radio {
          display: flex;
          border-radius: 3px;
          overflow: hidden;
          border: 1px solid #b6b6b6;

          label {
            position: absolute;
            top: 0; left: 0;
            color: #b6b6b6;
            width: 100%;
            height: 100%;
            background: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            pointer-events: none;
            border-right: 1px solid #b6b6b6;
          }
        }
      </style>

</head>

<body>
	 <div class="container mt-5">
      <div class="row text-center">
          <div class="col-md-12" style="height:100%;">
              <h1>Textroulette Preferences</h1>
              <p id="identity"></p>
              <!-- where the questions will append in -->

              <div id="answer-questions"></div>
              <br>
              <button id="submit" type="button" class="btn btn-outline-primary">
                <a href='/' class="btn">Submit</a>
              </button>
          </div>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"> </script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>

    <script type="text/javascript">

      // load when jquery and page has be loaded
      $(document).ready(function() {
          jQuery(function() {
              const user = {{{ user }}};
              // get data from database through AJAX request
              console.log('about to ask for questions');
              $.ajax({
                  type: 'GET',
                  contentType: 'application/json; charset=utf-8',
                  data: {"user": user.uuid},
                  url: '/questions',
                  dataType: 'json',
                  success: function(data){
                    // On success, update questions.
                    console.log('pulled questions and userdata');
                    var questionsWithUserAnswers = getQuestionsWithUserAnswers(data);
                    populateQuestions(questionsWithUserAnswers);
                    document.getElementById("submit").onclick = function (){ formSubmit(); };
                  },
                  failure: function(result){
                    error();
                  }
              });

              // CONSTRUCTING HTML SECTION (TODO: REACT)
              function constructLabel(name, qID, userAnswer, idx){
                if (name == userAnswer)
                    var active = 'active';
                else
                    var active = '';
                
                var start = ('<label class="btn btn-primary ' + active + '"' + 
                             '><input type="radio" name="options"' +
                             'qid= "' + qID + '" ' +
                             'response= "' + name + '" ' +
                             'autocomplete="off">');
                var end = '</label>'
                return start + name + end;
              }

              function constructDiv(names, qID, userAnswer, idx){
                var s = '';
                var start = ('<div class="btn-group" id="question' + (idx + 1) + '" ' +
                             ' data-toggle="buttons"' +
                             '>');
                var end = '</div>';
                s += start;
                names.forEach(function(name, qid, idx){
                  s += constructLabel(name, qID, userAnswer, idx);
                })
                //console.log(s + end);
                return s + end;
              }

              function constructSet(questions){
                var s = '';
                var start = '<div id="holder">';
                var end = '</div>';
                s += start;
                questions.forEach(function(question, idx){
                  s += '<h3>' + question.text + '</h3>';
                  s += constructDiv(question['answer_options'], question['_id'], question['userAnswer'], idx);
                })
                return s + end;
              }

              function populateQuestions(questions){
                document.getElementById('answer-questions').innerHTML = constructSet(questions);
              }

              // returns list of the questions but includes the user response to those questions
              function getQuestionsWithUserAnswers(data){
                // get questions and userAnswers from the data
                var questions = data.questions;
                if ("questions_answered" in data.userData)
                    var userAnswers = data.userData.questions_answered;
                else
                    var userAnswers = [];

                // maps question ids to user answers
                dictOfAnswers = {};
                
                // populate dictOfAnswers with ids of user answers and 
                for (var i = 0; i < userAnswers.length; i++) {
                    var userAnswer = userAnswers[i];
                    if (userAnswer.response_data.length > 0){
                        // get last answer object of the response_data array
                        var currentAnswer = userAnswer.response_data[userAnswer.response_data.length - 1];
                        dictOfAnswers[userAnswer.question_id] = currentAnswer.response;
                    }
                    
                }

                var newQuestionsArray = [];
                for (var i = 0; i < questions.length; i++) { 
                    var question = questions[i];

                    question.userAnswer = null;
                    if (question["_id"] in dictOfAnswers){
                        question.userAnswer = dictOfAnswers[question["_id"]];
                    }

                    newQuestionsArray.push(question);
                }
                return newQuestionsArray;
              }

              // READING RESPONSES CODE BELOW
              function calcAttribute(parent, attr){
                return Array.prototype.slice.call(parent.childNodes).map(function(elt){
                  return !!(elt.className.split(" ").indexOf("active") > -1) ? elt.firstChild.getAttribute(attr) : '';
                }).reduce((s, v) => s + v, '');
              }

              function getAnswer(questionNumber){
                var parent = $('#question' + questionNumber)[0];
                return {
                  question_id: calcAttribute(parent, 'qid'),
                  response: calcAttribute(parent, 'response')
                };
              }

              // Reads form to get answers.  Stores in custom JSON.  We don't need you form built-ins.  Go away.
              function getAnswersJSON(){
                var numQuestions = document.getElementsByTagName('h3').length;
                var answers = [];
                for (var i = 1; i <= numQuestions; i++){
                  answers.push(getAnswer(i));
                }
                return answers;
              }

              function formSubmit(){
                json = getAnswersJSON().filter(function(d){ return d.question_id != ''; });
                console.log('about to ajax');
                console.log(json);
                $.ajax({
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                      uuid: user.uuid,
                      questions_answered: json
                    }),
                    url: '/updateStance',
                    success: function(data){
                      // On success, update questions.
                      console.log(data);
                    },
                    failure: function(result){
                      console.log('failure');
                      error();
                    }
                });
              }
          })
      })
    </script>
</body>

</html>
